// Test query to trigger 64MB limit for debugging
// This should generate a large result set that exceeds Kusto's 64MB limit

// Method 1: Generate a large dataset with many rows
range x from 1 to 1000000 step 1
| extend 
    LargeText1 = strcat("This is a very long text string that will help us reach the 64MB limit faster ", x, " ", x, " ", x, " ", x),
    LargeText2 = strcat("Another long string with data ", x, " more data ", x, " even more data ", x, " lots of data ", x),
    LargeText3 = strcat("Third large column with content ", x, " and more content ", x, " and even more content ", x),
    LargeText4 = strcat("Fourth column with large text ", x, " repeated data ", x, " more repeated data ", x),
    LargeText5 = strcat("Fifth column to increase size ", x, " with additional content ", x, " more additional content ", x),
    Number1 = x,
    Number2 = x * 2,
    Number3 = x * 3,
    DateTime1 = datetime(2024-01-01) + timespan(x),
    DateTime2 = datetime(2024-01-01) + timespan(x * 2)
| take 1000000

// Method 2: Alternative - Cross join to create massive dataset (use carefully)
// let data1 = range x from 1 to 1000 step 1 | extend key = 1;
// let data2 = range y from 1 to 1000 step 1 | extend key = 1;
// data1 | join kind=inner data2 on key
// | extend LargeField = strcat("Large data ", x, " ", y, " with lots of content to make it big")
// | project x, y, LargeField
