import { IngestionPropertiesInput } from "./ingestionProperties.js";
import { KustoConnectionStringBuilder, KustoResponseDataSet } from "azure-kusto-data";
import { StreamDescriptor } from "./descriptors.js";
import { FileDescriptor } from "./fileDescriptor.browser.js";
import { KustoStreamingIngestClientBase } from "./streamingIngestClientBase.js";
declare class KustoStreamingIngestClient extends KustoStreamingIngestClientBase {
    constructor(kcsb: string | KustoConnectionStringBuilder, defaultProps?: IngestionPropertiesInput, autoCorrectEndpoint?: boolean);
    /**
     * Use Readable for Node.js and ArrayBuffer in browser
     */
    ingestFromStream(stream: StreamDescriptor | ArrayBuffer, ingestionProperties?: IngestionPropertiesInput, clientRequestId?: string): Promise<any>;
    /**
     * Use string for Node.js and Blob in browser
     */
    ingestFromFile(file: FileDescriptor | Blob, ingestionProperties?: IngestionPropertiesInput): Promise<KustoResponseDataSet>;
}
export default KustoStreamingIngestClient;
//# sourceMappingURL=streamingIngestClient.browser.d.ts.map