import KustoIngestClient from "./ingestClient.js";
import streamingIngestClient from "./streamingIngestClient.js";
import managedStreamingIngestClient from "./managedStreamingIngestClient.js";
import KustoIngestStatusQueues from "./status.js";
import { type IngestionResult, OperationStatus, type IngestionStatus, IngestionStatusInTableDescription } from "./ingestionResult.js";
import { DataFormat, IngestionMappingKind, ReportLevel, ReportMethod, ValidationImplications, ValidationOptions, ValidationPolicy, dataFormatMappingKind } from "./ingestionProperties.js";
import { ApacheAvroColumnMapping, AvroColumnMapping, ColumnMapping, ConstantTransformation, CsvColumnMapping, FieldTransformation, JsonColumnMapping, OrcColumnMapping, ParquetColumnMapping, SStreamColumnMapping, W3CLogFileMapping } from "./columnMappings.js";
import { BlobDescriptor, CompressionType, StreamDescriptor } from "./descriptors.js";
import { FileDescriptor } from "./fileDescriptor.js";
export type { Transformation as ColumnMappingTransformation } from "./columnMappings.js";
export { IngestionProperties } from "./ingestionProperties.js";
export { KustoIngestClient as IngestClient, KustoIngestStatusQueues as IngestStatusQueues, managedStreamingIngestClient as ManagedStreamingIngestClient, streamingIngestClient as StreamingIngestClient, };
/**
 * @deprecated - import directly instead. Export const is not exporting type.
 */
export declare const IngestionDescriptors: {
    BlobDescriptor: typeof BlobDescriptor;
    FileDescriptor: typeof FileDescriptor;
    StreamDescriptor: typeof StreamDescriptor;
};
export { ApacheAvroColumnMapping, AvroColumnMapping, BlobDescriptor, ColumnMapping, CompressionType, ConstantTransformation, CsvColumnMapping, DataFormat, FieldTransformation, FileDescriptor, IngestionMappingKind, JsonColumnMapping, OrcColumnMapping, ParquetColumnMapping, ReportLevel, ReportMethod, SStreamColumnMapping, StreamDescriptor, ValidationImplications, ValidationOptions, ValidationPolicy, W3CLogFileMapping, dataFormatMappingKind, type IngestionResult, OperationStatus, type IngestionStatus, IngestionStatusInTableDescription, };
/**
 * @deprecated - import directly instead
 */
export declare const IngestionPropertiesEnums: {
    JsonColumnMapping: typeof JsonColumnMapping;
    CsvColumnMapping: typeof CsvColumnMapping;
    AvroColumnMapping: typeof AvroColumnMapping;
    ParquetColumnMapping: typeof ParquetColumnMapping;
    OrcColumnMapping: typeof OrcColumnMapping;
    W3CLogFileMapping: typeof W3CLogFileMapping;
    ValidationPolicy: typeof ValidationPolicy;
    ReportLevel: typeof ReportLevel;
    ReportMethod: typeof ReportMethod;
    ValidationImplications: typeof ValidationImplications;
    ValidationOptions: typeof ValidationOptions;
    DataFormat: typeof DataFormat;
    /**
     * @deprecated - use IngestionMappingKind instead
     */
    IngestionMappingType: typeof IngestionMappingKind;
    IngestionMappingKind: typeof IngestionMappingKind;
    CompressionType: typeof CompressionType;
    ApacheAvroColumnMapping: typeof ApacheAvroColumnMapping;
    SStreamColumnMapping: typeof SStreamColumnMapping;
    ConstantTransformation: typeof ConstantTransformation;
    FieldTransformation: typeof FieldTransformation;
    ColumnMapping: typeof ColumnMapping;
};
export { IngestionPropertiesValidationError } from "./errors.js";
//# sourceMappingURL=index.d.ts.map