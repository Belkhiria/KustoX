/// <reference types="node" />
import { KustoConnectionStringBuilder } from "azure-kusto-data";
import { StreamDescriptor } from "./descriptors";
import { FileDescriptor } from "./fileDescriptor";
import { QueueSendMessageResponse } from "@azure/storage-queue";
import { IngestionPropertiesInput } from "./ingestionProperties";
import { KustoIngestClientBase } from "./ingestClientBase";
import { Readable } from "stream";
export declare class KustoIngestClient extends KustoIngestClientBase {
    constructor(kcsb: string | KustoConnectionStringBuilder, defaultProps?: IngestionPropertiesInput);
    /**
     * Use string in Node.JS and Blob in browser
     */
    ingestFromFile(file: FileDescriptor | string | Blob, ingestionProperties?: IngestionPropertiesInput): Promise<QueueSendMessageResponse>;
    /**
     * Use Readable in Node.JS and ArrayBuffer in browser
     */
    ingestFromStream(stream: StreamDescriptor | Readable | ArrayBuffer, ingestionProperties?: IngestionPropertiesInput): Promise<QueueSendMessageResponse>;
}
export default KustoIngestClient;
//# sourceMappingURL=ingestClient.d.ts.map