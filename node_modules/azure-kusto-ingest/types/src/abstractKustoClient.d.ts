import { IngestionProperties, IngestionPropertiesInput } from "./ingestionProperties";
import { StreamDescriptor, FileDescriptorBase, BlobDescriptor } from "./descriptors";
export declare abstract class AbstractKustoClient {
    defaultProps: IngestionProperties;
    defaultDatabase?: string;
    protected _isClosed: boolean;
    protected constructor(defaultProps: IngestionPropertiesInput);
    _getMergedProps(newProperties?: IngestionPropertiesInput): IngestionProperties;
    abstract ingestFromStream(stream: StreamDescriptor, ingestionProperties: IngestionPropertiesInput): Promise<any>;
    abstract ingestFromFile(file: FileDescriptorBase | string | Blob, ingestionProperties: IngestionPropertiesInput): Promise<any>;
    abstract ingestFromBlob(blob: string | BlobDescriptor, ingestionProperties?: IngestionPropertiesInput): Promise<any>;
    close(): void;
    protected ensureOpen(): void;
}
//# sourceMappingURL=abstractKustoClient.d.ts.map