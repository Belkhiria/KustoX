import { BlobDescriptor } from "./descriptors.js";
import IngestionProperties, { ReportLevel, ReportMethod } from "./ingestionProperties.js";
import { IngestionStatusInTableDescription } from "./ingestionResult.js";
export declare class IngestionBlobInfo {
    BlobPath: string;
    RawDataSize: number | null;
    DatabaseName: string | null;
    TableName: string | null;
    RetainBlobOnSuccess: boolean;
    FlushImmediately: boolean;
    IgnoreSizeLimit: boolean;
    ReportLevel: ReportLevel | null;
    ReportMethod: ReportMethod | null;
    SourceMessageCreationTime: Date;
    Id: string;
    AdditionalProperties: {
        [additional: string]: any;
    };
    IngestionStatusInTable: IngestionStatusInTableDescription | null;
    ApplicationForTracing?: string | null;
    ClientVersionForTracing?: string | null;
    constructor(blobDescriptor: BlobDescriptor, ingestionProperties: IngestionProperties, authContext?: string | null, applicationForTracing?: string | null, clientVersionForTracing?: string | null);
}
export default IngestionBlobInfo;
//# sourceMappingURL=ingestionBlobInfo.d.ts.map