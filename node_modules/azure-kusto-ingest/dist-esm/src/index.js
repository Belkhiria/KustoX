"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IngestionPropertiesValidationError = exports.IngestionPropertiesEnums = exports.dataFormatMappingKind = exports.W3CLogFileMapping = exports.ValidationPolicy = exports.ValidationOptions = exports.ValidationImplications = exports.StreamDescriptor = exports.SStreamColumnMapping = exports.ReportMethod = exports.ReportLevel = exports.ParquetColumnMapping = exports.OrcColumnMapping = exports.JsonColumnMapping = exports.IngestionMappingKind = exports.FileDescriptor = exports.FieldTransformation = exports.DataFormat = exports.CsvColumnMapping = exports.ConstantTransformation = exports.CompressionType = exports.ColumnMapping = exports.BlobDescriptor = exports.AvroColumnMapping = exports.ApacheAvroColumnMapping = exports.IngestionDescriptors = exports.StreamingIngestClient = exports.ManagedStreamingIngestClient = exports.IngestStatusQueues = exports.IngestClient = exports.IngestionProperties = void 0;
const ingestClient_1 = __importDefault(require("./ingestClient"));
exports.IngestClient = ingestClient_1.default;
const streamingIngestClient_1 = __importDefault(require("./streamingIngestClient"));
exports.StreamingIngestClient = streamingIngestClient_1.default;
const managedStreamingIngestClient_1 = __importDefault(require("./managedStreamingIngestClient"));
exports.ManagedStreamingIngestClient = managedStreamingIngestClient_1.default;
const status_1 = __importDefault(require("./status"));
exports.IngestStatusQueues = status_1.default;
const ingestionProperties_1 = require("./ingestionProperties");
Object.defineProperty(exports, "DataFormat", { enumerable: true, get: function () { return ingestionProperties_1.DataFormat; } });
Object.defineProperty(exports, "IngestionMappingKind", { enumerable: true, get: function () { return ingestionProperties_1.IngestionMappingKind; } });
Object.defineProperty(exports, "ReportLevel", { enumerable: true, get: function () { return ingestionProperties_1.ReportLevel; } });
Object.defineProperty(exports, "ReportMethod", { enumerable: true, get: function () { return ingestionProperties_1.ReportMethod; } });
Object.defineProperty(exports, "ValidationImplications", { enumerable: true, get: function () { return ingestionProperties_1.ValidationImplications; } });
Object.defineProperty(exports, "ValidationOptions", { enumerable: true, get: function () { return ingestionProperties_1.ValidationOptions; } });
Object.defineProperty(exports, "ValidationPolicy", { enumerable: true, get: function () { return ingestionProperties_1.ValidationPolicy; } });
Object.defineProperty(exports, "dataFormatMappingKind", { enumerable: true, get: function () { return ingestionProperties_1.dataFormatMappingKind; } });
const columnMappings_1 = require("./columnMappings");
Object.defineProperty(exports, "ApacheAvroColumnMapping", { enumerable: true, get: function () { return columnMappings_1.ApacheAvroColumnMapping; } });
Object.defineProperty(exports, "AvroColumnMapping", { enumerable: true, get: function () { return columnMappings_1.AvroColumnMapping; } });
Object.defineProperty(exports, "ColumnMapping", { enumerable: true, get: function () { return columnMappings_1.ColumnMapping; } });
Object.defineProperty(exports, "ConstantTransformation", { enumerable: true, get: function () { return columnMappings_1.ConstantTransformation; } });
Object.defineProperty(exports, "CsvColumnMapping", { enumerable: true, get: function () { return columnMappings_1.CsvColumnMapping; } });
Object.defineProperty(exports, "FieldTransformation", { enumerable: true, get: function () { return columnMappings_1.FieldTransformation; } });
Object.defineProperty(exports, "JsonColumnMapping", { enumerable: true, get: function () { return columnMappings_1.JsonColumnMapping; } });
Object.defineProperty(exports, "OrcColumnMapping", { enumerable: true, get: function () { return columnMappings_1.OrcColumnMapping; } });
Object.defineProperty(exports, "ParquetColumnMapping", { enumerable: true, get: function () { return columnMappings_1.ParquetColumnMapping; } });
Object.defineProperty(exports, "SStreamColumnMapping", { enumerable: true, get: function () { return columnMappings_1.SStreamColumnMapping; } });
Object.defineProperty(exports, "W3CLogFileMapping", { enumerable: true, get: function () { return columnMappings_1.W3CLogFileMapping; } });
const descriptors_1 = require("./descriptors");
Object.defineProperty(exports, "BlobDescriptor", { enumerable: true, get: function () { return descriptors_1.BlobDescriptor; } });
Object.defineProperty(exports, "CompressionType", { enumerable: true, get: function () { return descriptors_1.CompressionType; } });
Object.defineProperty(exports, "StreamDescriptor", { enumerable: true, get: function () { return descriptors_1.StreamDescriptor; } });
const fileDescriptor_1 = require("./fileDescriptor");
Object.defineProperty(exports, "FileDescriptor", { enumerable: true, get: function () { return fileDescriptor_1.FileDescriptor; } });
var ingestionProperties_2 = require("./ingestionProperties");
Object.defineProperty(exports, "IngestionProperties", { enumerable: true, get: function () { return ingestionProperties_2.IngestionProperties; } });
/**
 * @deprecated - import directly instead. Export const is not exporting type.
 */
exports.IngestionDescriptors = {
    BlobDescriptor: descriptors_1.BlobDescriptor,
    FileDescriptor: fileDescriptor_1.FileDescriptor,
    StreamDescriptor: descriptors_1.StreamDescriptor,
};
/**
 * @deprecated - import directly instead
 */
exports.IngestionPropertiesEnums = {
    JsonColumnMapping: columnMappings_1.JsonColumnMapping,
    CsvColumnMapping: columnMappings_1.CsvColumnMapping,
    AvroColumnMapping: columnMappings_1.AvroColumnMapping,
    ParquetColumnMapping: columnMappings_1.ParquetColumnMapping,
    OrcColumnMapping: columnMappings_1.OrcColumnMapping,
    W3CLogFileMapping: columnMappings_1.W3CLogFileMapping,
    ValidationPolicy: ingestionProperties_1.ValidationPolicy,
    ReportLevel: ingestionProperties_1.ReportLevel,
    ReportMethod: ingestionProperties_1.ReportMethod,
    ValidationImplications: ingestionProperties_1.ValidationImplications,
    ValidationOptions: ingestionProperties_1.ValidationOptions,
    DataFormat: ingestionProperties_1.DataFormat,
    /**
     * @deprecated - use IngestionMappingKind instead
     */
    IngestionMappingType: ingestionProperties_1.IngestionMappingKind,
    IngestionMappingKind: ingestionProperties_1.IngestionMappingKind,
    CompressionType: descriptors_1.CompressionType,
    ApacheAvroColumnMapping: columnMappings_1.ApacheAvroColumnMapping,
    SStreamColumnMapping: columnMappings_1.SStreamColumnMapping,
    ConstantTransformation: columnMappings_1.ConstantTransformation,
    FieldTransformation: columnMappings_1.FieldTransformation,
    ColumnMapping: columnMappings_1.ColumnMapping,
};
var errors_1 = require("./errors");
Object.defineProperty(exports, "IngestionPropertiesValidationError", { enumerable: true, get: function () { return errors_1.IngestionPropertiesValidationError; } });
// eslint-disable-next-line no-console
//# sourceMappingURL=index.js.map